#!/usr/local/bin/cbsd
#v10.0.4
MYARG=""
MYOPTARG="jname inter"
MYDESC="Start jail"
ADDHELP="inter=0 to prevent any questions and to accept answers by default\n"
CBSDMODULE="bhyve"
EXTHELP="wf_jstop_jstart.html"

. ${subr}
. ${inventory}
. ${system}
. ${color}
. ${strings}
. ${workdir}/universe.subr
. ${workdir}/bhyve.subr
readconf buildworld.conf
readconf jail.conf

init $*


init_grubcheck()
{
	grubcmd=$( which grub-bhyve )
	[ -z "${grubcmd}" ] && err 1 "${MAGENTA}Current version required for ${GREEN}grub-bhyve${MAGENTA}\nPlease ${GREEN}pkg install grub2-bhyve ${MAGENTA} or ${GREEN}make -C /usr/ports/sysutils/grub2-bhyve install${MAGENTA} it.${NORMAL}"
}

init_iso()
{
    [ -z "${iso_img}" ] && return 1
    local _mydir="${srcdir}/iso"
    local _myfile="${_mydir}/${iso_img}"

    [ ! -d "${_mydir}" -o ! -h "${_mydir}" ] && mkdir -p ${_mydir}

    [ -z "${iso_img_dist}" ] && iso_img_dist="${iso_img}"

    if [ ! -f "${_myfile}" -a ! -f "${_mydir}/${iso_img_dist}" -a "${fetch}" = "1" ]; then
	[ -z "${iso_site}" ] && ${ECHO} "${MAGENTA}No such iso: ${GREEN}${_myfile}${MAGENTA} and ${GREEN}iso_site${MAGENTA} variable not found" && return 1
	if getyesno "${MAGENTA}No such iso: ${GREEN}${_myfile}${MAGENTA} in ${GREEN}${_mydir}${NORMAL}\n${BOLD}Shall i download it from: ${NORMAL}${iso_site}?"; then
	    fetch -a -o ${_mydir}/${iso_img_dist} ${iso_site}${iso_img_dist}
	fi
    fi

    if [ -n "${iso_extract}" -a -f "${_mydir}/${iso_img_dist}" -a ! -f "${_myfile}" -a "${fetch}" = "1" ]; then
	${ECHO} "${MAGENTA}Extracting...${NORMAL}"
	set -o xtrace
	cd ${_mydir}
	${iso_extract} ${_mydir}/${iso_img_dist}
	set +o xtrace
    fi

    [ ! -f "${_myfile}" ] && return 1

    iso_img="${_myfile}"
    return 0
}


start_bhyve()
{
	local bhyveload_cmd _devicemap _err
	local grubmem=512

	grubmem=$(( vm_ram / 1024 / 1024 ))

	case "${vm_os_type}" in
		"freebsd")
			bhyveload_cmd="/usr/sbin/bhyveload -m ${vm_ram} -d ${data}/${MDFILE} ${jname}"
			echo "$bhyveload_cmd"
			${tmuxcmd} new -s "cbsd-${jname}" "eval $bhyveload_cmd"
#			installer_opt="-s 31:0,virtio-blk,${BOOTDISK}"
			;;
		"linux")
			_devicemap="${jailsysdir}/${jname}/device.map"
			# profile
			readconf bhyve-${vm_os_type}-${vm_os_profile}.conf
			[ -z "${bhyve_profile}" ] && err 1 "${MAGENTA}No such profile: ${GREEN}bhyve-${vm_os_type}-${vm_os_profile}.conf${NORMAL}"
			# re-read jail params and apply personal after profile 
			. ${jrcconf}
			_err=$( file -s ${data}/${MDFILE}| cut -d":" -f2|xargs)
			
			if [ "${_err}" = "data" -o "${_err}" = "empty" -a "${vm_boot}" = "hdd" ]; then
				if getyesno "${MAGENTA}Looks like ${GREEN}${data}/${MDFILE}${MAGENTA} is empty.${NORMAL}\n${BOLD}May be want to boot from CD?${NORMAL}"; then
				    vm_boot="cd";
				fi
			fi

			[ "${vm_iso_path}" != "0" ] && iso_img="${vm_iso_path}"
			if [ "${vm_boot}" = "cd" ]; then
			    init_iso
			    if [ $? -eq 1 ]; then
				printf "${MAGENTA}Continue without ${iso_img}. Hope this is ok, sleep for 5 seconds ${NORMAL}"
				for i in $( jot 5 ); do
				    printf "."
				    sleep 1
				done
			    echo
			    fi
			fi
			${ECHO} "${MAGENTA}Creating ${GREEN}device.map ${MAGENTA}in ${GREEN}${_devicemap}${NORMAL}"
			truncate -s0 ${_devicemap}
			echo "(hd0) ${data}/${MDFILE}" >> "${_devicemap}"
			echo "(cd0) ${iso_img}" >> "${_devicemap}"
			cat "${_devicemap}"
			[ -z "${grub_boot_cmd}" ] && err 1 "${MAGENTA}No such grub_boot_cmd variable. Check ${GREEN}vm_os_profile${MAGENTA} of config for ${GREEN}bhyve-${vm_os_type}-${vm_os_profile}.conf${MAGENTA} in ${etcdir}${NORMAL}"
			[ -z "${grub_iso_cmd}" -a "${vm_boot}" = "cd" ] && err 1 "${MAGENTA}No such grub_iso_cmd variable. Check ${GREEN}vm_os_profile${MANGETA} of config for ${GREEN}bhyve-${vm_os_type}-${vm_os_profile}.conf ${MAGENTA}in ${etcdir}${NORMAL}"
			echo ${grub_boot_cmd}
			;;
		openbsd|dflybsd|netbsd)
			_devicemap="${jailsysdir}/${jname}/device.map"
			# profile
			readconf bhyve-${vm_os_type}-${vm_os_profile}.conf
			[ -z "${bhyve_profile}" ] && err 1 "${MAGENTA}No such profile: ${GREEN}bhyve-${vm_os_type}-${vm_os_profile}.conf${NORMAL}"
			# re-read jail params and apply personal after profile
			. ${jrcconf}
			init_iso
			if [ $? -eq 1 ]; then
			    printf "${MAGENTA}Continue without ${iso_img}. Hope this is ok, sleep for 5 seconds ${NORMAL}"
			    for i in $( jot 5 ); do
				printf "."
				sleep 1
			    done
			    echo
			fi
			_err=$( file -s ${data}/${MDFILE}| cut -d":" -f2|xargs)

			if [ "${_err}" = "data" -a "${vm_boot}" = "hdd" ]; then
			    if getyesno "${MAGENTA}Looks like ${GREEN}${data}/${MDFILE}${MAGENTA} is empty.${NORMAL}\n${BOLD}May be want to boot from CD?${NORMAL}"; then
				vm_boot="cd";
			    fi
			fi

			${ECHO} "${MAGENTA}Creating ${GREEN}device.map ${MAGENTA}in ${GREEN}${_devicemap}${NORMAL}"
			truncate -s0 ${_devicemap}
			echo "(hd0) ${data}/${MDFILE}" >> "${_devicemap}"
			echo "(cd0) ${iso_img}" >> "${_devicemap}"
			cat "${_devicemap}"
			[ -z "${grub_boot_cmd}" ] && err 1 "${MAGENTA}No such grub_boot_cmd variable. Check ${GREEN}vm_os_profile${MAGENTA} of config for ${GREEN}bhyve-${vm_os_type}-${vm_os_profile}.conf${MAGENTA} in ${etcdir}${NORMAL}"
			[ -z "${grub_iso_cmd}" -a "${vm_boot}" = "cd" ] && err 1 "${MAGENTA}No such grub_iso_cmd variable. Check ${GREEN}vm_os_profile${MANGETA} of config for ${GREEN}bhyve-${vm_os_type}-${vm_os_profile}.conf ${MAGENTA}in ${etcdir}${NORMAL}"
			;;
		*)
			err 1 "${MAGENTA}Unknown vm profile: ${GREEN}${vm_os_type}${NORMAL}"
	esac

			if [ "${vm_os_type}" != "freebsd" ]; then
			    ${ECHO} "${MAGENTA}Booting from: ${GREEN}${vm_boot}${NORMAL}"
			    # Bhyveload
			    case "${vm_boot}" in
				"cd")
				    echo "B: $grub_iso_cmd"
#				    if [ "${inter}" = "0" ]; then
#					eval "/usr/sbin/daemon -p ${ftmpdir}/bhyveload.${jname}.$$ ${tmuxcmd} new -s \"cbsd-${jname}\" \"eval $grub_iso_cmd\""
#				    else
					eval "$grub_iso_cmd"
#				    fi
				;;
				"hdd")
				    echo "Boot from HDD"
#				    if [ "${inter}" = "0" ]; then
#				    echo "INTER"
#				    sleep 2
#					eval "/usr/sbin/daemon -p ${ftmpdir}/bhyveload.${jname}.$$ ${tmuxcmd} new -s \"cbsd-${jname}\" \"eval $grub_boot_cmd\""
#				    else
					eval "$grub_boot_cmd"
#				    fi
				;;
				*)
				    echo "Booting from hdd"
#				    if [ "${inter}" = "0" ]; then
#					eval "eval /usr/sbin/daemon -p ${ftmpdir}/bhyveload.${jname}.$$ ${tmuxcmd} new -s \"cbsd-${jname}\" \"eval $grub_boot_cmd\""
#				    else
					eval "$grub_boot_cmd"
#				    fi
				;;
			    esac
			fi

	# for vnet we can make another action
	. ${vimageconf}
	# when ip=0 and interface=auto we must use default interface for upstream
	[ "${interface}" = "0" -o "${interface}" = "auto" ] && interface=$(getnics-by-ip ip=0.0.0.0)

	if ! mybridge=`get_my_device bridge ${interface}`; then
	    err 1 "${MAGENTA}Error: Cant get_my_device for ${interface}: ${mybridge}${NORMAL}"
	fi

	mytap=$( get_my_tap ${mybridge} )
	[ $? -eq 1 ] && err 1 "${MAGENTA}Error: Cant get_my_tap by: ${GREEN}${mybridge}${NORMAL}"

	/sbin/ifconfig ${mytap} description ${jname} up
	_res=$( /sbin/ifconfig ${mybridge} addm ${interface} addm ${mytap} >/dev/null 2>&1 )

	#unset zero-value
	[ "${bhyve_flags}" = "0" ] && unset bhyve_flags
	[ "${vm_os_profile}" = "0" ] && unset vm_os_profile

    # init hostbridge_args
    if ! compile_hostbridge_args; then
	${ECHO} "${MAGENTA}No such hostbridge for VMs: ${GREEN}${jname}${NORMAL}"
	unset hostbridge_args
    fi

    # init lpc_args
    if ! compile_lpc_args; then
	${ECHO} "${MAGENTA}No such lpc for VMs: ${GREEN}${jname}${NORMAL}"
	unset lpc_args
    fi

    # init nic_args
    # mytap is necessary. Todo: multiple nics
    if ! compile_nic_args; then
	${ECHO} "${MAGENTA}No such nic for VMs: ${GREEN}${jname}${NORMAL}"
	unset nic_args
    fi

    # init dsk_args
    if ! compile_dsk_args; then
	${ECHO} "${MAGENTA}No such disk for VMs: ${GREEN}${jname}${NORMAL}"
	unset dsk_args
    fi

    # init cd_args
    if ! compile_cd_args; then
	${ECHO} "${MAGENTA}No such cd for VMs: ${GREEN}${jname}${NORMAL}"
	unset cd_args
    fi

    # Poehali!
#	if [ "${inter}" = "0" ]; then
#	    # let save .pid
#	    sleep 3
#	    [ -f "${ftmpdir}/bhyveload.${jname}.$$" ] && cbsd_pwait --pid=$( cat ${ftmpdir}/bhyveload.${jname}.$$ ) --timeout=${parallel}
#	fi
	${tmuxcmd} -u new -d -s "cbsd-${jname}" "( \
	eval /usr/sbin/bhyve ${bhyve_flags} -c ${vm_cpus} -m ${vm_ram} -A -H -P ${hostbridge_args} ${lpc_args} ${nic_args} ${dsk_args} ${cd_args} -l com1,stdio ${jname}; \
	cbsd bstop ${jname}; /sbin/ifconfig ${mytap} destroy )"

	err 0 "${MAGENTA}Use ${GREEN}cbsd blogin ${jname}${MAGENTA} for attach to console${NORMAL}"
}



# MAIN for multiple jails
if [ $# -gt 1 -a -z "${jname}" -a -z "${inter}" ]; then
# recursive
    JLIST=$*
    for jname in ${JLIST}; do
        if [ -n "${inter}" ]; then
    	    /usr/sbin/daemon -p ${ftmpdir}/jstart.${jname}.$$ /usr/local/bin/cbsd jstart jname=${jname} inter=$inter
    	else
    	    /usr/sbin/daemon -p ${ftmpdir}/jstart.${jname}.$$ /usr/local/bin/cbsd jstart jname=${jname}
    	fi
	#lets save .pid file
	sleep 1
        [ -f "${ftmpdir}/jstart.${jname}.$$" ] && cbsd_pwait --pid=`cat ${ftmpdir}/jstart.${jname}.$$` --timeout=${parallel}
    done

    wait_for_jstart ${parallel}

    err 0 "${MAGENTA}Multiple jstart: ${GREEN}done${NORMAL}"
fi


# MAIN
    init_bhyve

    [ -z "$jname" ] && jname=$1
    . ${jrcconf}
    [ $? -eq 1 ] && err 1 "${MAGENTA}No such jail: ${GREEN}${jname}${NORMAL}"
    [ ${status} -eq 2 ] && err 1 "${MAGENTA}Jail in slave mode. Please ${GREEN}cbsd jswmode mode=master${MAGENTA} first${NORMAL}"
    [ $jid -ne 0 ] && err 1 "${MAGENTA}Jail already running, jid: ${GREEN}${jid}${NORMAL}"
    [ "${emulator}" != "bhyve" ] && err 1 "${MAGENTA}Not bhyve mode${NORMAL}"
    [ -z "${vm_ram}" -o -z "${vm_cpus}" -o -z "${vm_os_type}" ] && err 1 "${MAGENTA}Parameter is mandatory: ${GREEN}vm_ram, vm_cpus, vm_os_type${NORMAL}"
    [ "${vm_os_type}" != "freebsd" ] && init_grubcheck
    # hardcoded first disk path from SQL. Todo: mark bootable disk(s)
    MDFILE=$( cbsdsql local SELECT dsk_path FROM bhyvedsk WHERE jname=\"${jname}\" AND dsk_type=\"vhd\" LIMIT 1 2>/dev/null )
    [ ! -f "${data}/${MDFILE}" ] && ${ECHO} "${MAGENTA}No such ${data}/${MDFILE} but mdsize flags is not null. Skip${NORMAL}" && continue
    [ "${emulator}" = "bhyve" ] && start_bhyve
    exit 0
